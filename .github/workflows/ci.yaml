name: Nix CI
"on":
  pull_request:
  push:
    branches: [master]
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch: {}

env:
  nix_conf: |
    access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://cache.iog.io
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
    keep-env-derivations = true
    keep-outputs = true

jobs:
  update:
    name: Update data and flakes
    permissions:
      actions: write
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: ${{ env.nix_conf }}
      # - run: curl bashupload.com -T /nix/var/nix/db/db.sqlite
      - uses: nix-community/cache-nix-action/restore@2cd4784f94ac72d01a69524988f97fb4debe8115
        with:
          primary-key: nix-update-${{ hashfiles('*.nix', '*.lock') }}
          restore-prefixes-first-match: nix-update-
      # - run: curl bashupload.com -T /nix/var/nix/db/db.sqlite
      - run: |
          nix registry pin nixpkgs github:nixos/nixpkgs/3a05eebede89661660945da1f151959900903b6a
          nix profile install $(nix flake archive nixpkgs --json | jq -r '.path')
      - run: ls /nix/store | grep libgcc
      - run: nix profile install nixpkgs#nvfetcher
      - run: ls /nix/store | grep libgcc
      - run: nix build nixpkgs#nvfetcher
      - run: nix path-info --recursive nixpkgs#nvfetcher | grep libgcc
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - run: nix store gc -vv
      - run: ls /nix/store | grep libgcc
      - uses: nix-community/cache-nix-action/save@2cd4784f94ac72d01a69524988f97fb4debe8115
        if: always()
        with:
          primary-key: nix-update-${{ hashfiles('*.nix', '*.lock') }}
          gc-max-store-size-linux: 0
          purge: true
          purge-prefixes: nix-update-
          purge-created: 0
          purge-primary-key: never
